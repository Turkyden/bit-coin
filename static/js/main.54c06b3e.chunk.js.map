{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["G2","registerShape","draw","cfg","container","point","x","y","group","addGroup","decorator1","addShape","attrs","r","fill","color","opacity","decorator2","decorator3","animate","duration","easing","repeat","delay","App","ref","useRef","plot","count","useEffect","current","Line","data","formatter","datum","name","value","render","window","setInterval","length","changeData","slice","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4qxHAKAA,KAAGC,cAAc,QAAS,eAAgB,CACxCC,KADwC,SACnCC,EAAKC,GAER,IAAMC,EAAQ,CAAEC,EAAGH,EAAIG,EAAGC,EAAGJ,EAAII,GAC3BC,EAAQJ,EAAUK,WAClBC,EAAaF,EAAMG,SAAS,SAAU,CAC1CC,MAAO,CACLN,EAAGD,EAAMC,EACTC,EAAGF,EAAME,EACTM,EAAG,GACHC,KAAMX,EAAIY,MACVC,QAAS,MAGPC,EAAaT,EAAMG,SAAS,SAAU,CAC1CC,MAAO,CACLN,EAAGD,EAAMC,EACTC,EAAGF,EAAME,EACTM,EAAG,GACHC,KAAMX,EAAIY,MACVC,QAAS,MAGPE,EAAaV,EAAMG,SAAS,SAAU,CAC1CC,MAAO,CACLN,EAAGD,EAAMC,EACTC,EAAGF,EAAME,EACTM,EAAG,GACHC,KAAMX,EAAIY,MACVC,QAAS,MAuDb,OApDAN,EAAWS,QACT,CACEN,EAAG,GACHG,QAAS,GAEX,CACEI,SAAU,KACVC,OAAQ,aACRC,QAAQ,IAGZL,EAAWE,QACT,CACEN,EAAG,GACHG,QAAS,GAEX,CACEI,SAAU,KACVC,OAAQ,aACRC,QAAQ,EACRC,MAAO,MAGXL,EAAWC,QACT,CACEN,EAAG,GACHG,QAAS,GAEX,CACEI,SAAU,KACVC,OAAQ,aACRC,QAAQ,EACRC,MAAO,OAGXf,EAAMG,SAAS,SAAU,CACvBC,MAAO,CACLN,EAAGD,EAAMC,EACTC,EAAGF,EAAME,EACTM,EAAG,EACHC,KAAMX,EAAIY,MACVC,QAAS,MAGbR,EAAMG,SAAS,SAAU,CACvBC,MAAO,CACLN,EAAGD,EAAMC,EACTC,EAAGF,EAAME,EACTM,EAAG,IACHC,KAAMX,EAAIY,SAGPP,KA+DIgB,MA3Df,WACE,IAAMC,EAAMC,iBAAO,MACbC,EAAOD,iBAAO,MACdE,EAAQF,iBAAO,GA+CrB,OA7CAG,qBAAU,WA8BRF,EAAKG,QAAU,IAAIC,OAAKN,EAAIK,QAAb,aACbE,KAAM,IA9BO,CACb,MAAS,CACP,SAAW,EACX,KAAQ,WAEV,QAAU,EACV,YAAe,CACb,SAAW,EACX,KAAQ,0DAEV,OAAU,CACR,UAAY,GAEd,UAAY,EACZ,MAAS,KACT,OAAU,IACV,OAAU,IACV,OAAU,IACV,GAAM,aACN,MAAS,CACP,WAEF,QAAW,CACT,MAAS,eACTC,UAAW,SAACC,GACV,MAAO,CAAEC,KAAMD,EAAM5B,EAAG8B,MAAOF,EAAM3B,EAAI,eAQ/CoB,EAAKG,QAAQO,SAEbC,OAAOC,aAAY,WACdX,EAAME,UAAYE,EAAKQ,SACxBZ,EAAME,QAAU,GAElBH,EAAKG,QAAQW,WAAWT,EAAKU,MAAMd,EAAME,QAASF,EAAME,QAAU,KAClEF,EAAME,QAAUF,EAAME,QAAU,IAC/B,OACF,IAGD,sBAAKa,UAAU,MAAf,UACE,yCACA,uFACA,qBAAKA,UAAU,QAAQlB,IAAKA,QCvInBmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAShB,OACP,cAAC,IAAMiB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.54c06b3e.chunk.js","sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { G2, Line } from '@antv/g2plot'\nimport './App.css';\nimport data from './assets/bitcoin.json';\n\nG2.registerShape('point', 'breath-point', {\n  draw(cfg, container) {\n    // const data = cfg.data;\n    const point = { x: cfg.x, y: cfg.y };\n    const group = container.addGroup();\n    const decorator1 = group.addShape('circle', {\n      attrs: {\n        x: point.x,\n        y: point.y,\n        r: 10,\n        fill: cfg.color,\n        opacity: 0.5,\n      },\n    });\n    const decorator2 = group.addShape('circle', {\n      attrs: {\n        x: point.x,\n        y: point.y,\n        r: 10,\n        fill: cfg.color,\n        opacity: 0.5,\n      },\n    });\n    const decorator3 = group.addShape('circle', {\n      attrs: {\n        x: point.x,\n        y: point.y,\n        r: 10,\n        fill: cfg.color,\n        opacity: 0.5,\n      },\n    });\n    decorator1.animate(\n      {\n        r: 20,\n        opacity: 0,\n      },\n      {\n        duration: 1800,\n        easing: 'easeLinear',\n        repeat: true,\n      }\n    );\n    decorator2.animate(\n      {\n        r: 20,\n        opacity: 0,\n      },\n      {\n        duration: 1800,\n        easing: 'easeLinear',\n        repeat: true,\n        delay: 600,\n      }\n    );\n    decorator3.animate(\n      {\n        r: 20,\n        opacity: 0,\n      },\n      {\n        duration: 1800,\n        easing: 'easeLinear',\n        repeat: true,\n        delay: 1200,\n      }\n    );\n    group.addShape('circle', {\n      attrs: {\n        x: point.x,\n        y: point.y,\n        r: 6,\n        fill: cfg.color,\n        opacity: 0.7,\n      },\n    });\n    group.addShape('circle', {\n      attrs: {\n        x: point.x,\n        y: point.y,\n        r: 1.5,\n        fill: cfg.color,\n      },\n    });\n    return group;\n  },\n});\n\nfunction App() {\n  const ref = useRef(null);\n  const plot = useRef(null);\n  const count = useRef(0);\n\n  useEffect(() => {\n    const config = {\n      \"title\": {\n        \"visible\": true,\n        \"text\": \"BitCoin\"\n      },\n      \"smooth\": true,\n      \"description\": {\n        \"visible\": true,\n        \"text\": \"比特币十年走势一览\"\n      },\n      \"legend\": {\n        \"flipPage\": false\n      },\n      \"forceFit\": false,\n      \"width\": 1099,\n      \"height\": 562,\n      \"xField\": \"x\",\n      \"yField\": \"y\",\n      \"id\": \"line_chart\",\n      \"color\": [\n        \"#5B8FF9\"\n      ],\n      \"tooltip\": {\n        \"title\": '价格',\n        formatter: (datum) => {\n          return { name: datum.x, value: datum.y + '元' };\n        },\n      }\n    }\n    plot.current = new Line(ref.current, {\n      data: [],\n      ...config,\n    });\n    plot.current.render();\n    \n    window.setInterval(() => {\n      if(count.current === data.length) {\n        count.current = 0;\n      }\n      plot.current.changeData(data.slice(count.current, count.current + 30)); // 更新数据源\n      count.current = count.current + 1;\n    }, 100)\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <h2>BitCoin</h2>\n      <p>比特币十年走势一览</p>\n      <div className=\"Chart\" ref={ref} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}